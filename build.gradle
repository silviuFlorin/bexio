/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'io.spring.dependency-management' version "${springDependencyManagement}"
    id 'org.springframework.boot' version "${orgSpringframeworkBoot}"
    id 'maven-publish'
    id 'java-library'
    id 'com.diffplug.spotless' version "${spotless}"
    id 'io.qameta.allure' version "${allurePlugin}"
}

repositories {
    mavenLocal()
    mavenCentral()
}

compileJava {
    sourceCompatibility = 17
    targetCompatibility = 17
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter')
    implementation('org.springframework.boot:spring-boot-starter-test')
    api("io.qameta.allure:allure-rest-assured:${allureRestAssured}"){
        exclude group: 'org.codehaus.groovy'
    }
    api("com.fasterxml.jackson.core:jackson-core:${jacksonCore}")
    api("io.rest-assured:rest-assured:${restAssured}")
    api "io.rest-assured:xml-path:${restAssured}"
    implementation('org.projectlombok:lombok')
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    api "com.fasterxml.jackson.core:jackson-annotations:${jacksonCore}"
    api "com.fasterxml.jackson.core:jackson-databind:${jacksonCore}"
    api "io.rest-assured:rest-assured-common:${restAssured}"
    api "io.qameta.allure:allure-testng:${allureTestNg}"
    api("org.testng:testng:${testng}")
    implementation 'com.google.guava:guava:31.1-jre'
}

spotless {
    java {
        removeUnusedImports()
        googleJavaFormat()
    }
}

tasks.named('test') {
    useTestNG {
        suites 'src/test/resources/suite.xml'
        testLogging.showStandardStreams = true
    }
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}
